# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class Aula(models.Model):
    idaula = models.AutoField(db_column='idAula', primary_key=True)  # Field name made lowercase.
    capacidad = models.CharField(max_length=20)
    aire = models.IntegerField()
    videobeam = models.IntegerField()
    pizarra = models.IntegerField()
    ubicacion = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'aula'


class AuthGroup(models.Model):
    name = models.CharField(unique=True, max_length=150)

    class Meta:
        managed = False
        db_table = 'auth_group'


class AuthGroupPermissions(models.Model):
    id = models.BigAutoField(primary_key=True)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)
    permission = models.ForeignKey('AuthPermission', models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_group_permissions'
        unique_together = (('group', 'permission'),)


class AuthPermission(models.Model):
    name = models.CharField(max_length=255)
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING)
    codename = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'auth_permission'
        unique_together = (('content_type', 'codename'),)


class AuthUser(models.Model):
    password = models.CharField(max_length=128)
    last_login = models.DateTimeField(blank=True, null=True)
    is_superuser = models.IntegerField()
    username = models.CharField(unique=True, max_length=150)
    first_name = models.CharField(max_length=150)
    last_name = models.CharField(max_length=150)
    email = models.CharField(max_length=254)
    is_staff = models.IntegerField()
    is_active = models.IntegerField()
    date_joined = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'auth_user'


class AuthUserGroups(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    group = models.ForeignKey(AuthGroup, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_groups'
        unique_together = (('user', 'group'),)


class AuthUserUserPermissions(models.Model):
    id = models.BigAutoField(primary_key=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)
    permission = models.ForeignKey(AuthPermission, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'auth_user_user_permissions'
        unique_together = (('user', 'permission'),)


class Carrera(models.Model):
    idcarrera = models.AutoField(db_column='idCarrera', primary_key=True)  # Field name made lowercase.
    nombre = models.CharField(max_length=20)
    numero_semestre = models.IntegerField()
    modalidad = models.CharField(max_length=15)
    mencion = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'carrera'


class Carreraestudiante(models.Model):
    id = models.BigAutoField(primary_key=True)
    idcarrera = models.ForeignKey(Carrera, models.DO_NOTHING, db_column='idCarrera')  # Field name made lowercase.
    idestudiante = models.ForeignKey('Estudiante', models.DO_NOTHING, db_column='idEstudiante')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'carreraestudiante'


class DjangoAdminLog(models.Model):
    action_time = models.DateTimeField()
    object_id = models.TextField(blank=True, null=True)
    object_repr = models.CharField(max_length=200)
    action_flag = models.PositiveSmallIntegerField()
    change_message = models.TextField()
    content_type = models.ForeignKey('DjangoContentType', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey(AuthUser, models.DO_NOTHING)

    class Meta:
        managed = False
        db_table = 'django_admin_log'


class DjangoContentType(models.Model):
    app_label = models.CharField(max_length=100)
    model = models.CharField(max_length=100)

    class Meta:
        managed = False
        db_table = 'django_content_type'
        unique_together = (('app_label', 'model'),)


class DjangoMigrations(models.Model):
    id = models.BigAutoField(primary_key=True)
    app = models.CharField(max_length=255)
    name = models.CharField(max_length=255)
    applied = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_migrations'


class DjangoSession(models.Model):
    session_key = models.CharField(primary_key=True, max_length=40)
    session_data = models.TextField()
    expire_date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'django_session'


class Estudiante(models.Model):
    idestudiante = models.AutoField(db_column='idEstudiante', primary_key=True)  # Field name made lowercase.
    nombre = models.CharField(max_length=30)
    apellido = models.CharField(max_length=20)
    direccion = models.CharField(max_length=80)
    telefeno = models.CharField(max_length=20)
    email = models.CharField(max_length=30)
    estado = models.CharField(max_length=20)
    fecha_nac = models.DateField()
    fecha_ing = models.DateField()

    class Meta:
        managed = False
        db_table = 'estudiante'


class Horarioestudiante(models.Model):
    id = models.BigAutoField(primary_key=True)
    dia = models.CharField(max_length=15)
    horario_inicio = models.CharField(max_length=15)
    horario_fin = models.CharField(max_length=15)
    idaula = models.ForeignKey(Aula, models.DO_NOTHING, db_column='idAula')  # Field name made lowercase.
    idestudiante = models.ForeignKey(Estudiante, models.DO_NOTHING, db_column='idEstudiante')  # Field name made lowercase.
    idmateria = models.ForeignKey('Materia', models.DO_NOTHING, db_column='idMateria')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'horarioestudiante'


class Horarioprofesor(models.Model):
    id = models.BigAutoField(primary_key=True)
    dia = models.CharField(max_length=15)
    horario_inicio = models.CharField(max_length=15)
    horario_fin = models.CharField(max_length=15)
    idaula = models.ForeignKey(Aula, models.DO_NOTHING, db_column='idAula')  # Field name made lowercase.
    idmateria = models.ForeignKey('Materia', models.DO_NOTHING, db_column='idMateria')  # Field name made lowercase.
    idprofesor = models.ForeignKey('Profesor', models.DO_NOTHING, db_column='idProfesor')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'horarioprofesor'


class Materia(models.Model):
    idmateria = models.AutoField(db_column='idMateria', primary_key=True)  # Field name made lowercase.
    nombre_materia = models.CharField(max_length=20)
    unidades_creditos = models.IntegerField()
    modalidad = models.CharField(max_length=20)
    idcarrera = models.IntegerField(db_column='idCarrera')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'materia'


class MateriaProfesor(models.Model):
    id = models.BigAutoField(primary_key=True)
    idmateria = models.ForeignKey(Materia, models.DO_NOTHING, db_column='idMateria')  # Field name made lowercase.
    idprofesor = models.ForeignKey('Profesor', models.DO_NOTHING, db_column='idProfesor')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'materia_profesor'


class Nota(models.Model):
    id = models.BigAutoField(primary_key=True)
    nota = models.DecimalField(max_digits=4, decimal_places=2)
    idestudiante = models.ForeignKey(Estudiante, models.DO_NOTHING, db_column='idEstudiante')  # Field name made lowercase.
    idmateria = models.ForeignKey(Materia, models.DO_NOTHING, db_column='idMateria')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'nota'


class Profesor(models.Model):
    idprofesor = models.AutoField(db_column='idProfesor', primary_key=True)  # Field name made lowercase.
    nombre = models.CharField(max_length=30)
    apellido = models.CharField(max_length=20)
    direccion = models.CharField(max_length=80)
    telefono = models.CharField(max_length=20)
    especialidad = models.CharField(max_length=80)
    email = models.CharField(max_length=30)
    fecha_ingreso = models.DateField()

    class Meta:
        managed = False
        db_table = 'profesor'
